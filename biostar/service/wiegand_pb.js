// source: wiegand.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var device_pb = require('./device_pb.js');
goog.object.extend(proto, device_pb);
var err_pb = require('./err_pb.js');
goog.object.extend(proto, err_pb);
goog.exportSymbol('proto.gsdk.wiegand.Enum', null, global);
goog.exportSymbol('proto.gsdk.wiegand.GetConfigRequest', null, global);
goog.exportSymbol('proto.gsdk.wiegand.GetConfigResponse', null, global);
goog.exportSymbol('proto.gsdk.wiegand.GetDeviceRequest', null, global);
goog.exportSymbol('proto.gsdk.wiegand.GetDeviceResponse', null, global);
goog.exportSymbol('proto.gsdk.wiegand.ParityField', null, global);
goog.exportSymbol('proto.gsdk.wiegand.SearchDeviceRequest', null, global);
goog.exportSymbol('proto.gsdk.wiegand.SearchDeviceResponse', null, global);
goog.exportSymbol('proto.gsdk.wiegand.SetConfigMultiRequest', null, global);
goog.exportSymbol('proto.gsdk.wiegand.SetConfigMultiResponse', null, global);
goog.exportSymbol('proto.gsdk.wiegand.SetConfigRequest', null, global);
goog.exportSymbol('proto.gsdk.wiegand.SetConfigResponse', null, global);
goog.exportSymbol('proto.gsdk.wiegand.SetDeviceRequest', null, global);
goog.exportSymbol('proto.gsdk.wiegand.SetDeviceResponse', null, global);
goog.exportSymbol('proto.gsdk.wiegand.WiegandConfig', null, global);
goog.exportSymbol('proto.gsdk.wiegand.WiegandDeviceInfo', null, global);
goog.exportSymbol('proto.gsdk.wiegand.WiegandFormat', null, global);
goog.exportSymbol('proto.gsdk.wiegand.WiegandMode', null, global);
goog.exportSymbol('proto.gsdk.wiegand.WiegandOutType', null, global);
goog.exportSymbol('proto.gsdk.wiegand.WiegandOutput', null, global);
goog.exportSymbol('proto.gsdk.wiegand.WiegandParity', null, global);
goog.exportSymbol('proto.gsdk.wiegand.WiegandTamperInput', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gsdk.wiegand.ParityField = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gsdk.wiegand.ParityField, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gsdk.wiegand.ParityField.displayName = 'proto.gsdk.wiegand.ParityField';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gsdk.wiegand.WiegandFormat = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gsdk.wiegand.WiegandFormat.repeatedFields_, null);
};
goog.inherits(proto.gsdk.wiegand.WiegandFormat, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gsdk.wiegand.WiegandFormat.displayName = 'proto.gsdk.wiegand.WiegandFormat';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gsdk.wiegand.WiegandConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gsdk.wiegand.WiegandConfig.repeatedFields_, null);
};
goog.inherits(proto.gsdk.wiegand.WiegandConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gsdk.wiegand.WiegandConfig.displayName = 'proto.gsdk.wiegand.WiegandConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gsdk.wiegand.GetConfigRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gsdk.wiegand.GetConfigRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gsdk.wiegand.GetConfigRequest.displayName = 'proto.gsdk.wiegand.GetConfigRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gsdk.wiegand.GetConfigResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gsdk.wiegand.GetConfigResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gsdk.wiegand.GetConfigResponse.displayName = 'proto.gsdk.wiegand.GetConfigResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gsdk.wiegand.SetConfigRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gsdk.wiegand.SetConfigRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gsdk.wiegand.SetConfigRequest.displayName = 'proto.gsdk.wiegand.SetConfigRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gsdk.wiegand.SetConfigResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gsdk.wiegand.SetConfigResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gsdk.wiegand.SetConfigResponse.displayName = 'proto.gsdk.wiegand.SetConfigResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gsdk.wiegand.SetConfigMultiRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gsdk.wiegand.SetConfigMultiRequest.repeatedFields_, null);
};
goog.inherits(proto.gsdk.wiegand.SetConfigMultiRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gsdk.wiegand.SetConfigMultiRequest.displayName = 'proto.gsdk.wiegand.SetConfigMultiRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gsdk.wiegand.SetConfigMultiResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gsdk.wiegand.SetConfigMultiResponse.repeatedFields_, null);
};
goog.inherits(proto.gsdk.wiegand.SetConfigMultiResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gsdk.wiegand.SetConfigMultiResponse.displayName = 'proto.gsdk.wiegand.SetConfigMultiResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gsdk.wiegand.WiegandTamperInput = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gsdk.wiegand.WiegandTamperInput, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gsdk.wiegand.WiegandTamperInput.displayName = 'proto.gsdk.wiegand.WiegandTamperInput';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gsdk.wiegand.WiegandOutput = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gsdk.wiegand.WiegandOutput, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gsdk.wiegand.WiegandOutput.displayName = 'proto.gsdk.wiegand.WiegandOutput';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gsdk.wiegand.WiegandDeviceInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gsdk.wiegand.WiegandDeviceInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gsdk.wiegand.WiegandDeviceInfo.displayName = 'proto.gsdk.wiegand.WiegandDeviceInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gsdk.wiegand.SearchDeviceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gsdk.wiegand.SearchDeviceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gsdk.wiegand.SearchDeviceRequest.displayName = 'proto.gsdk.wiegand.SearchDeviceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gsdk.wiegand.SearchDeviceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gsdk.wiegand.SearchDeviceResponse.repeatedFields_, null);
};
goog.inherits(proto.gsdk.wiegand.SearchDeviceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gsdk.wiegand.SearchDeviceResponse.displayName = 'proto.gsdk.wiegand.SearchDeviceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gsdk.wiegand.SetDeviceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gsdk.wiegand.SetDeviceRequest.repeatedFields_, null);
};
goog.inherits(proto.gsdk.wiegand.SetDeviceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gsdk.wiegand.SetDeviceRequest.displayName = 'proto.gsdk.wiegand.SetDeviceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gsdk.wiegand.SetDeviceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gsdk.wiegand.SetDeviceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gsdk.wiegand.SetDeviceResponse.displayName = 'proto.gsdk.wiegand.SetDeviceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gsdk.wiegand.GetDeviceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gsdk.wiegand.GetDeviceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gsdk.wiegand.GetDeviceRequest.displayName = 'proto.gsdk.wiegand.GetDeviceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gsdk.wiegand.GetDeviceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gsdk.wiegand.GetDeviceResponse.repeatedFields_, null);
};
goog.inherits(proto.gsdk.wiegand.GetDeviceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gsdk.wiegand.GetDeviceResponse.displayName = 'proto.gsdk.wiegand.GetDeviceResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gsdk.wiegand.ParityField.prototype.toObject = function(opt_includeInstance) {
  return proto.gsdk.wiegand.ParityField.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gsdk.wiegand.ParityField} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.wiegand.ParityField.toObject = function(includeInstance, msg) {
  var f, obj = {
    paritypos: jspb.Message.getFieldWithDefault(msg, 1, 0),
    paritytype: jspb.Message.getFieldWithDefault(msg, 2, 0),
    data: msg.getData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gsdk.wiegand.ParityField}
 */
proto.gsdk.wiegand.ParityField.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gsdk.wiegand.ParityField;
  return proto.gsdk.wiegand.ParityField.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gsdk.wiegand.ParityField} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gsdk.wiegand.ParityField}
 */
proto.gsdk.wiegand.ParityField.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setParitypos(value);
      break;
    case 2:
      var value = /** @type {!proto.gsdk.wiegand.WiegandParity} */ (reader.readEnum());
      msg.setParitytype(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gsdk.wiegand.ParityField.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gsdk.wiegand.ParityField.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gsdk.wiegand.ParityField} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.wiegand.ParityField.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParitypos();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getParitytype();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional uint32 parityPos = 1;
 * @return {number}
 */
proto.gsdk.wiegand.ParityField.prototype.getParitypos = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.gsdk.wiegand.ParityField} returns this
 */
proto.gsdk.wiegand.ParityField.prototype.setParitypos = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional WiegandParity parityType = 2;
 * @return {!proto.gsdk.wiegand.WiegandParity}
 */
proto.gsdk.wiegand.ParityField.prototype.getParitytype = function() {
  return /** @type {!proto.gsdk.wiegand.WiegandParity} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.gsdk.wiegand.WiegandParity} value
 * @return {!proto.gsdk.wiegand.ParityField} returns this
 */
proto.gsdk.wiegand.ParityField.prototype.setParitytype = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional bytes data = 3;
 * @return {!(string|Uint8Array)}
 */
proto.gsdk.wiegand.ParityField.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes data = 3;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.gsdk.wiegand.ParityField.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.gsdk.wiegand.ParityField.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.gsdk.wiegand.ParityField} returns this
 */
proto.gsdk.wiegand.ParityField.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gsdk.wiegand.WiegandFormat.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gsdk.wiegand.WiegandFormat.prototype.toObject = function(opt_includeInstance) {
  return proto.gsdk.wiegand.WiegandFormat.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gsdk.wiegand.WiegandFormat} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.wiegand.WiegandFormat.toObject = function(includeInstance, msg) {
  var f, obj = {
    formatid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    length: jspb.Message.getFieldWithDefault(msg, 2, 0),
    idfieldsList: msg.getIdfieldsList_asB64(),
    parityfieldsList: jspb.Message.toObjectList(msg.getParityfieldsList(),
    proto.gsdk.wiegand.ParityField.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gsdk.wiegand.WiegandFormat}
 */
proto.gsdk.wiegand.WiegandFormat.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gsdk.wiegand.WiegandFormat;
  return proto.gsdk.wiegand.WiegandFormat.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gsdk.wiegand.WiegandFormat} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gsdk.wiegand.WiegandFormat}
 */
proto.gsdk.wiegand.WiegandFormat.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFormatid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLength(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addIdfields(value);
      break;
    case 4:
      var value = new proto.gsdk.wiegand.ParityField;
      reader.readMessage(value,proto.gsdk.wiegand.ParityField.deserializeBinaryFromReader);
      msg.addParityfields(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gsdk.wiegand.WiegandFormat.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gsdk.wiegand.WiegandFormat.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gsdk.wiegand.WiegandFormat} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.wiegand.WiegandFormat.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFormatid();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getLength();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getIdfieldsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      3,
      f
    );
  }
  f = message.getParityfieldsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.gsdk.wiegand.ParityField.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 formatID = 1;
 * @return {number}
 */
proto.gsdk.wiegand.WiegandFormat.prototype.getFormatid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.gsdk.wiegand.WiegandFormat} returns this
 */
proto.gsdk.wiegand.WiegandFormat.prototype.setFormatid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 length = 2;
 * @return {number}
 */
proto.gsdk.wiegand.WiegandFormat.prototype.getLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.gsdk.wiegand.WiegandFormat} returns this
 */
proto.gsdk.wiegand.WiegandFormat.prototype.setLength = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated bytes IDFields = 3;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.gsdk.wiegand.WiegandFormat.prototype.getIdfieldsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * repeated bytes IDFields = 3;
 * This is a type-conversion wrapper around `getIdfieldsList()`
 * @return {!Array<string>}
 */
proto.gsdk.wiegand.WiegandFormat.prototype.getIdfieldsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getIdfieldsList()));
};


/**
 * repeated bytes IDFields = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getIdfieldsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.gsdk.wiegand.WiegandFormat.prototype.getIdfieldsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getIdfieldsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.gsdk.wiegand.WiegandFormat} returns this
 */
proto.gsdk.wiegand.WiegandFormat.prototype.setIdfieldsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.gsdk.wiegand.WiegandFormat} returns this
 */
proto.gsdk.wiegand.WiegandFormat.prototype.addIdfields = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gsdk.wiegand.WiegandFormat} returns this
 */
proto.gsdk.wiegand.WiegandFormat.prototype.clearIdfieldsList = function() {
  return this.setIdfieldsList([]);
};


/**
 * repeated ParityField parityFields = 4;
 * @return {!Array<!proto.gsdk.wiegand.ParityField>}
 */
proto.gsdk.wiegand.WiegandFormat.prototype.getParityfieldsList = function() {
  return /** @type{!Array<!proto.gsdk.wiegand.ParityField>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gsdk.wiegand.ParityField, 4));
};


/**
 * @param {!Array<!proto.gsdk.wiegand.ParityField>} value
 * @return {!proto.gsdk.wiegand.WiegandFormat} returns this
*/
proto.gsdk.wiegand.WiegandFormat.prototype.setParityfieldsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.gsdk.wiegand.ParityField=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gsdk.wiegand.ParityField}
 */
proto.gsdk.wiegand.WiegandFormat.prototype.addParityfields = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.gsdk.wiegand.ParityField, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gsdk.wiegand.WiegandFormat} returns this
 */
proto.gsdk.wiegand.WiegandFormat.prototype.clearParityfieldsList = function() {
  return this.setParityfieldsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gsdk.wiegand.WiegandConfig.repeatedFields_ = [7,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gsdk.wiegand.WiegandConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.gsdk.wiegand.WiegandConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gsdk.wiegand.WiegandConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.wiegand.WiegandConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    mode: jspb.Message.getFieldWithDefault(msg, 1, 0),
    usewiegandbypass: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    usefailcode: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    failcode: jspb.Message.getFieldWithDefault(msg, 4, 0),
    outpulsewidth: jspb.Message.getFieldWithDefault(msg, 5, 0),
    outpulseinterval: jspb.Message.getFieldWithDefault(msg, 6, 0),
    formatsList: jspb.Message.toObjectList(msg.getFormatsList(),
    proto.gsdk.wiegand.WiegandFormat.toObject, includeInstance),
    slaveformatsList: jspb.Message.toObjectList(msg.getSlaveformatsList(),
    proto.gsdk.wiegand.WiegandFormat.toObject, includeInstance),
    csnformat: (f = msg.getCsnformat()) && proto.gsdk.wiegand.WiegandFormat.toObject(includeInstance, f),
    usewieganduserid: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gsdk.wiegand.WiegandConfig}
 */
proto.gsdk.wiegand.WiegandConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gsdk.wiegand.WiegandConfig;
  return proto.gsdk.wiegand.WiegandConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gsdk.wiegand.WiegandConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gsdk.wiegand.WiegandConfig}
 */
proto.gsdk.wiegand.WiegandConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.gsdk.wiegand.WiegandMode} */ (reader.readEnum());
      msg.setMode(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUsewiegandbypass(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUsefailcode(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFailcode(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOutpulsewidth(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOutpulseinterval(value);
      break;
    case 7:
      var value = new proto.gsdk.wiegand.WiegandFormat;
      reader.readMessage(value,proto.gsdk.wiegand.WiegandFormat.deserializeBinaryFromReader);
      msg.addFormats(value);
      break;
    case 8:
      var value = new proto.gsdk.wiegand.WiegandFormat;
      reader.readMessage(value,proto.gsdk.wiegand.WiegandFormat.deserializeBinaryFromReader);
      msg.addSlaveformats(value);
      break;
    case 9:
      var value = new proto.gsdk.wiegand.WiegandFormat;
      reader.readMessage(value,proto.gsdk.wiegand.WiegandFormat.deserializeBinaryFromReader);
      msg.setCsnformat(value);
      break;
    case 10:
      var value = /** @type {!proto.gsdk.wiegand.WiegandOutType} */ (reader.readEnum());
      msg.setUsewieganduserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gsdk.wiegand.WiegandConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gsdk.wiegand.WiegandConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gsdk.wiegand.WiegandConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.wiegand.WiegandConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getUsewiegandbypass();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getUsefailcode();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getFailcode();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getOutpulsewidth();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getOutpulseinterval();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getFormatsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.gsdk.wiegand.WiegandFormat.serializeBinaryToWriter
    );
  }
  f = message.getSlaveformatsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.gsdk.wiegand.WiegandFormat.serializeBinaryToWriter
    );
  }
  f = message.getCsnformat();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.gsdk.wiegand.WiegandFormat.serializeBinaryToWriter
    );
  }
  f = message.getUsewieganduserid();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
};


/**
 * optional WiegandMode mode = 1;
 * @return {!proto.gsdk.wiegand.WiegandMode}
 */
proto.gsdk.wiegand.WiegandConfig.prototype.getMode = function() {
  return /** @type {!proto.gsdk.wiegand.WiegandMode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.gsdk.wiegand.WiegandMode} value
 * @return {!proto.gsdk.wiegand.WiegandConfig} returns this
 */
proto.gsdk.wiegand.WiegandConfig.prototype.setMode = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional bool useWiegandBypass = 2;
 * @return {boolean}
 */
proto.gsdk.wiegand.WiegandConfig.prototype.getUsewiegandbypass = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gsdk.wiegand.WiegandConfig} returns this
 */
proto.gsdk.wiegand.WiegandConfig.prototype.setUsewiegandbypass = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool useFailCode = 3;
 * @return {boolean}
 */
proto.gsdk.wiegand.WiegandConfig.prototype.getUsefailcode = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gsdk.wiegand.WiegandConfig} returns this
 */
proto.gsdk.wiegand.WiegandConfig.prototype.setUsefailcode = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional uint32 failCode = 4;
 * @return {number}
 */
proto.gsdk.wiegand.WiegandConfig.prototype.getFailcode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.gsdk.wiegand.WiegandConfig} returns this
 */
proto.gsdk.wiegand.WiegandConfig.prototype.setFailcode = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 outPulseWidth = 5;
 * @return {number}
 */
proto.gsdk.wiegand.WiegandConfig.prototype.getOutpulsewidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.gsdk.wiegand.WiegandConfig} returns this
 */
proto.gsdk.wiegand.WiegandConfig.prototype.setOutpulsewidth = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 outPulseInterval = 6;
 * @return {number}
 */
proto.gsdk.wiegand.WiegandConfig.prototype.getOutpulseinterval = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.gsdk.wiegand.WiegandConfig} returns this
 */
proto.gsdk.wiegand.WiegandConfig.prototype.setOutpulseinterval = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * repeated WiegandFormat formats = 7;
 * @return {!Array<!proto.gsdk.wiegand.WiegandFormat>}
 */
proto.gsdk.wiegand.WiegandConfig.prototype.getFormatsList = function() {
  return /** @type{!Array<!proto.gsdk.wiegand.WiegandFormat>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gsdk.wiegand.WiegandFormat, 7));
};


/**
 * @param {!Array<!proto.gsdk.wiegand.WiegandFormat>} value
 * @return {!proto.gsdk.wiegand.WiegandConfig} returns this
*/
proto.gsdk.wiegand.WiegandConfig.prototype.setFormatsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.gsdk.wiegand.WiegandFormat=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gsdk.wiegand.WiegandFormat}
 */
proto.gsdk.wiegand.WiegandConfig.prototype.addFormats = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.gsdk.wiegand.WiegandFormat, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gsdk.wiegand.WiegandConfig} returns this
 */
proto.gsdk.wiegand.WiegandConfig.prototype.clearFormatsList = function() {
  return this.setFormatsList([]);
};


/**
 * repeated WiegandFormat slaveFormats = 8;
 * @return {!Array<!proto.gsdk.wiegand.WiegandFormat>}
 */
proto.gsdk.wiegand.WiegandConfig.prototype.getSlaveformatsList = function() {
  return /** @type{!Array<!proto.gsdk.wiegand.WiegandFormat>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gsdk.wiegand.WiegandFormat, 8));
};


/**
 * @param {!Array<!proto.gsdk.wiegand.WiegandFormat>} value
 * @return {!proto.gsdk.wiegand.WiegandConfig} returns this
*/
proto.gsdk.wiegand.WiegandConfig.prototype.setSlaveformatsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.gsdk.wiegand.WiegandFormat=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gsdk.wiegand.WiegandFormat}
 */
proto.gsdk.wiegand.WiegandConfig.prototype.addSlaveformats = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.gsdk.wiegand.WiegandFormat, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gsdk.wiegand.WiegandConfig} returns this
 */
proto.gsdk.wiegand.WiegandConfig.prototype.clearSlaveformatsList = function() {
  return this.setSlaveformatsList([]);
};


/**
 * optional WiegandFormat CSNFormat = 9;
 * @return {?proto.gsdk.wiegand.WiegandFormat}
 */
proto.gsdk.wiegand.WiegandConfig.prototype.getCsnformat = function() {
  return /** @type{?proto.gsdk.wiegand.WiegandFormat} */ (
    jspb.Message.getWrapperField(this, proto.gsdk.wiegand.WiegandFormat, 9));
};


/**
 * @param {?proto.gsdk.wiegand.WiegandFormat|undefined} value
 * @return {!proto.gsdk.wiegand.WiegandConfig} returns this
*/
proto.gsdk.wiegand.WiegandConfig.prototype.setCsnformat = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gsdk.wiegand.WiegandConfig} returns this
 */
proto.gsdk.wiegand.WiegandConfig.prototype.clearCsnformat = function() {
  return this.setCsnformat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gsdk.wiegand.WiegandConfig.prototype.hasCsnformat = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional WiegandOutType useWiegandUserID = 10;
 * @return {!proto.gsdk.wiegand.WiegandOutType}
 */
proto.gsdk.wiegand.WiegandConfig.prototype.getUsewieganduserid = function() {
  return /** @type {!proto.gsdk.wiegand.WiegandOutType} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.gsdk.wiegand.WiegandOutType} value
 * @return {!proto.gsdk.wiegand.WiegandConfig} returns this
 */
proto.gsdk.wiegand.WiegandConfig.prototype.setUsewieganduserid = function(value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gsdk.wiegand.GetConfigRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gsdk.wiegand.GetConfigRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gsdk.wiegand.GetConfigRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.wiegand.GetConfigRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    deviceid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gsdk.wiegand.GetConfigRequest}
 */
proto.gsdk.wiegand.GetConfigRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gsdk.wiegand.GetConfigRequest;
  return proto.gsdk.wiegand.GetConfigRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gsdk.wiegand.GetConfigRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gsdk.wiegand.GetConfigRequest}
 */
proto.gsdk.wiegand.GetConfigRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDeviceid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gsdk.wiegand.GetConfigRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gsdk.wiegand.GetConfigRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gsdk.wiegand.GetConfigRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.wiegand.GetConfigRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeviceid();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 deviceID = 1;
 * @return {number}
 */
proto.gsdk.wiegand.GetConfigRequest.prototype.getDeviceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.gsdk.wiegand.GetConfigRequest} returns this
 */
proto.gsdk.wiegand.GetConfigRequest.prototype.setDeviceid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gsdk.wiegand.GetConfigResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gsdk.wiegand.GetConfigResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gsdk.wiegand.GetConfigResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.wiegand.GetConfigResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    config: (f = msg.getConfig()) && proto.gsdk.wiegand.WiegandConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gsdk.wiegand.GetConfigResponse}
 */
proto.gsdk.wiegand.GetConfigResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gsdk.wiegand.GetConfigResponse;
  return proto.gsdk.wiegand.GetConfigResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gsdk.wiegand.GetConfigResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gsdk.wiegand.GetConfigResponse}
 */
proto.gsdk.wiegand.GetConfigResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gsdk.wiegand.WiegandConfig;
      reader.readMessage(value,proto.gsdk.wiegand.WiegandConfig.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gsdk.wiegand.GetConfigResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gsdk.wiegand.GetConfigResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gsdk.wiegand.GetConfigResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.wiegand.GetConfigResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gsdk.wiegand.WiegandConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional WiegandConfig config = 1;
 * @return {?proto.gsdk.wiegand.WiegandConfig}
 */
proto.gsdk.wiegand.GetConfigResponse.prototype.getConfig = function() {
  return /** @type{?proto.gsdk.wiegand.WiegandConfig} */ (
    jspb.Message.getWrapperField(this, proto.gsdk.wiegand.WiegandConfig, 1));
};


/**
 * @param {?proto.gsdk.wiegand.WiegandConfig|undefined} value
 * @return {!proto.gsdk.wiegand.GetConfigResponse} returns this
*/
proto.gsdk.wiegand.GetConfigResponse.prototype.setConfig = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gsdk.wiegand.GetConfigResponse} returns this
 */
proto.gsdk.wiegand.GetConfigResponse.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gsdk.wiegand.GetConfigResponse.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gsdk.wiegand.SetConfigRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gsdk.wiegand.SetConfigRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gsdk.wiegand.SetConfigRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.wiegand.SetConfigRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    deviceid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    config: (f = msg.getConfig()) && proto.gsdk.wiegand.WiegandConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gsdk.wiegand.SetConfigRequest}
 */
proto.gsdk.wiegand.SetConfigRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gsdk.wiegand.SetConfigRequest;
  return proto.gsdk.wiegand.SetConfigRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gsdk.wiegand.SetConfigRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gsdk.wiegand.SetConfigRequest}
 */
proto.gsdk.wiegand.SetConfigRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDeviceid(value);
      break;
    case 2:
      var value = new proto.gsdk.wiegand.WiegandConfig;
      reader.readMessage(value,proto.gsdk.wiegand.WiegandConfig.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gsdk.wiegand.SetConfigRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gsdk.wiegand.SetConfigRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gsdk.wiegand.SetConfigRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.wiegand.SetConfigRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeviceid();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gsdk.wiegand.WiegandConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 deviceID = 1;
 * @return {number}
 */
proto.gsdk.wiegand.SetConfigRequest.prototype.getDeviceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.gsdk.wiegand.SetConfigRequest} returns this
 */
proto.gsdk.wiegand.SetConfigRequest.prototype.setDeviceid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional WiegandConfig config = 2;
 * @return {?proto.gsdk.wiegand.WiegandConfig}
 */
proto.gsdk.wiegand.SetConfigRequest.prototype.getConfig = function() {
  return /** @type{?proto.gsdk.wiegand.WiegandConfig} */ (
    jspb.Message.getWrapperField(this, proto.gsdk.wiegand.WiegandConfig, 2));
};


/**
 * @param {?proto.gsdk.wiegand.WiegandConfig|undefined} value
 * @return {!proto.gsdk.wiegand.SetConfigRequest} returns this
*/
proto.gsdk.wiegand.SetConfigRequest.prototype.setConfig = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gsdk.wiegand.SetConfigRequest} returns this
 */
proto.gsdk.wiegand.SetConfigRequest.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gsdk.wiegand.SetConfigRequest.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gsdk.wiegand.SetConfigResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gsdk.wiegand.SetConfigResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gsdk.wiegand.SetConfigResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.wiegand.SetConfigResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gsdk.wiegand.SetConfigResponse}
 */
proto.gsdk.wiegand.SetConfigResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gsdk.wiegand.SetConfigResponse;
  return proto.gsdk.wiegand.SetConfigResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gsdk.wiegand.SetConfigResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gsdk.wiegand.SetConfigResponse}
 */
proto.gsdk.wiegand.SetConfigResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gsdk.wiegand.SetConfigResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gsdk.wiegand.SetConfigResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gsdk.wiegand.SetConfigResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.wiegand.SetConfigResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gsdk.wiegand.SetConfigMultiRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gsdk.wiegand.SetConfigMultiRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gsdk.wiegand.SetConfigMultiRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gsdk.wiegand.SetConfigMultiRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.wiegand.SetConfigMultiRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    deviceidsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    config: (f = msg.getConfig()) && proto.gsdk.wiegand.WiegandConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gsdk.wiegand.SetConfigMultiRequest}
 */
proto.gsdk.wiegand.SetConfigMultiRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gsdk.wiegand.SetConfigMultiRequest;
  return proto.gsdk.wiegand.SetConfigMultiRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gsdk.wiegand.SetConfigMultiRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gsdk.wiegand.SetConfigMultiRequest}
 */
proto.gsdk.wiegand.SetConfigMultiRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setDeviceidsList(value);
      break;
    case 2:
      var value = new proto.gsdk.wiegand.WiegandConfig;
      reader.readMessage(value,proto.gsdk.wiegand.WiegandConfig.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gsdk.wiegand.SetConfigMultiRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gsdk.wiegand.SetConfigMultiRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gsdk.wiegand.SetConfigMultiRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.wiegand.SetConfigMultiRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeviceidsList();
  if (f.length > 0) {
    writer.writePackedUint32(
      1,
      f
    );
  }
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gsdk.wiegand.WiegandConfig.serializeBinaryToWriter
    );
  }
};


/**
 * repeated uint32 deviceIDs = 1;
 * @return {!Array<number>}
 */
proto.gsdk.wiegand.SetConfigMultiRequest.prototype.getDeviceidsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.gsdk.wiegand.SetConfigMultiRequest} returns this
 */
proto.gsdk.wiegand.SetConfigMultiRequest.prototype.setDeviceidsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.gsdk.wiegand.SetConfigMultiRequest} returns this
 */
proto.gsdk.wiegand.SetConfigMultiRequest.prototype.addDeviceids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gsdk.wiegand.SetConfigMultiRequest} returns this
 */
proto.gsdk.wiegand.SetConfigMultiRequest.prototype.clearDeviceidsList = function() {
  return this.setDeviceidsList([]);
};


/**
 * optional WiegandConfig config = 2;
 * @return {?proto.gsdk.wiegand.WiegandConfig}
 */
proto.gsdk.wiegand.SetConfigMultiRequest.prototype.getConfig = function() {
  return /** @type{?proto.gsdk.wiegand.WiegandConfig} */ (
    jspb.Message.getWrapperField(this, proto.gsdk.wiegand.WiegandConfig, 2));
};


/**
 * @param {?proto.gsdk.wiegand.WiegandConfig|undefined} value
 * @return {!proto.gsdk.wiegand.SetConfigMultiRequest} returns this
*/
proto.gsdk.wiegand.SetConfigMultiRequest.prototype.setConfig = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gsdk.wiegand.SetConfigMultiRequest} returns this
 */
proto.gsdk.wiegand.SetConfigMultiRequest.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gsdk.wiegand.SetConfigMultiRequest.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gsdk.wiegand.SetConfigMultiResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gsdk.wiegand.SetConfigMultiResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gsdk.wiegand.SetConfigMultiResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gsdk.wiegand.SetConfigMultiResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.wiegand.SetConfigMultiResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    deviceerrorsList: jspb.Message.toObjectList(msg.getDeviceerrorsList(),
    err_pb.ErrorResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gsdk.wiegand.SetConfigMultiResponse}
 */
proto.gsdk.wiegand.SetConfigMultiResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gsdk.wiegand.SetConfigMultiResponse;
  return proto.gsdk.wiegand.SetConfigMultiResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gsdk.wiegand.SetConfigMultiResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gsdk.wiegand.SetConfigMultiResponse}
 */
proto.gsdk.wiegand.SetConfigMultiResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new err_pb.ErrorResponse;
      reader.readMessage(value,err_pb.ErrorResponse.deserializeBinaryFromReader);
      msg.addDeviceerrors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gsdk.wiegand.SetConfigMultiResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gsdk.wiegand.SetConfigMultiResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gsdk.wiegand.SetConfigMultiResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.wiegand.SetConfigMultiResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeviceerrorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      err_pb.ErrorResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated gsdk.err.ErrorResponse deviceErrors = 1;
 * @return {!Array<!proto.gsdk.err.ErrorResponse>}
 */
proto.gsdk.wiegand.SetConfigMultiResponse.prototype.getDeviceerrorsList = function() {
  return /** @type{!Array<!proto.gsdk.err.ErrorResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, err_pb.ErrorResponse, 1));
};


/**
 * @param {!Array<!proto.gsdk.err.ErrorResponse>} value
 * @return {!proto.gsdk.wiegand.SetConfigMultiResponse} returns this
*/
proto.gsdk.wiegand.SetConfigMultiResponse.prototype.setDeviceerrorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.gsdk.err.ErrorResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gsdk.err.ErrorResponse}
 */
proto.gsdk.wiegand.SetConfigMultiResponse.prototype.addDeviceerrors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.gsdk.err.ErrorResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gsdk.wiegand.SetConfigMultiResponse} returns this
 */
proto.gsdk.wiegand.SetConfigMultiResponse.prototype.clearDeviceerrorsList = function() {
  return this.setDeviceerrorsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gsdk.wiegand.WiegandTamperInput.prototype.toObject = function(opt_includeInstance) {
  return proto.gsdk.wiegand.WiegandTamperInput.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gsdk.wiegand.WiegandTamperInput} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.wiegand.WiegandTamperInput.toObject = function(includeInstance, msg) {
  var f, obj = {
    deviceid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    port: jspb.Message.getFieldWithDefault(msg, 2, 0),
    switchtype: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gsdk.wiegand.WiegandTamperInput}
 */
proto.gsdk.wiegand.WiegandTamperInput.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gsdk.wiegand.WiegandTamperInput;
  return proto.gsdk.wiegand.WiegandTamperInput.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gsdk.wiegand.WiegandTamperInput} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gsdk.wiegand.WiegandTamperInput}
 */
proto.gsdk.wiegand.WiegandTamperInput.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDeviceid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {!proto.gsdk.device.SwitchType} */ (reader.readEnum());
      msg.setSwitchtype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gsdk.wiegand.WiegandTamperInput.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gsdk.wiegand.WiegandTamperInput.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gsdk.wiegand.WiegandTamperInput} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.wiegand.WiegandTamperInput.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeviceid();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getSwitchtype();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional uint32 deviceID = 1;
 * @return {number}
 */
proto.gsdk.wiegand.WiegandTamperInput.prototype.getDeviceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.gsdk.wiegand.WiegandTamperInput} returns this
 */
proto.gsdk.wiegand.WiegandTamperInput.prototype.setDeviceid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 port = 2;
 * @return {number}
 */
proto.gsdk.wiegand.WiegandTamperInput.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.gsdk.wiegand.WiegandTamperInput} returns this
 */
proto.gsdk.wiegand.WiegandTamperInput.prototype.setPort = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional gsdk.device.SwitchType switchType = 3;
 * @return {!proto.gsdk.device.SwitchType}
 */
proto.gsdk.wiegand.WiegandTamperInput.prototype.getSwitchtype = function() {
  return /** @type {!proto.gsdk.device.SwitchType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.gsdk.device.SwitchType} value
 * @return {!proto.gsdk.wiegand.WiegandTamperInput} returns this
 */
proto.gsdk.wiegand.WiegandTamperInput.prototype.setSwitchtype = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gsdk.wiegand.WiegandOutput.prototype.toObject = function(opt_includeInstance) {
  return proto.gsdk.wiegand.WiegandOutput.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gsdk.wiegand.WiegandOutput} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.wiegand.WiegandOutput.toObject = function(includeInstance, msg) {
  var f, obj = {
    deviceid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    port: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gsdk.wiegand.WiegandOutput}
 */
proto.gsdk.wiegand.WiegandOutput.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gsdk.wiegand.WiegandOutput;
  return proto.gsdk.wiegand.WiegandOutput.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gsdk.wiegand.WiegandOutput} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gsdk.wiegand.WiegandOutput}
 */
proto.gsdk.wiegand.WiegandOutput.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDeviceid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPort(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gsdk.wiegand.WiegandOutput.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gsdk.wiegand.WiegandOutput.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gsdk.wiegand.WiegandOutput} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.wiegand.WiegandOutput.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeviceid();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 deviceID = 1;
 * @return {number}
 */
proto.gsdk.wiegand.WiegandOutput.prototype.getDeviceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.gsdk.wiegand.WiegandOutput} returns this
 */
proto.gsdk.wiegand.WiegandOutput.prototype.setDeviceid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 port = 2;
 * @return {number}
 */
proto.gsdk.wiegand.WiegandOutput.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.gsdk.wiegand.WiegandOutput} returns this
 */
proto.gsdk.wiegand.WiegandOutput.prototype.setPort = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gsdk.wiegand.WiegandDeviceInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.gsdk.wiegand.WiegandDeviceInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gsdk.wiegand.WiegandDeviceInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.wiegand.WiegandDeviceInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    deviceid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    tamperinput: (f = msg.getTamperinput()) && proto.gsdk.wiegand.WiegandTamperInput.toObject(includeInstance, f),
    redledoutput: (f = msg.getRedledoutput()) && proto.gsdk.wiegand.WiegandOutput.toObject(includeInstance, f),
    greenledoutput: (f = msg.getGreenledoutput()) && proto.gsdk.wiegand.WiegandOutput.toObject(includeInstance, f),
    buzzeroutput: (f = msg.getBuzzeroutput()) && proto.gsdk.wiegand.WiegandOutput.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gsdk.wiegand.WiegandDeviceInfo}
 */
proto.gsdk.wiegand.WiegandDeviceInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gsdk.wiegand.WiegandDeviceInfo;
  return proto.gsdk.wiegand.WiegandDeviceInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gsdk.wiegand.WiegandDeviceInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gsdk.wiegand.WiegandDeviceInfo}
 */
proto.gsdk.wiegand.WiegandDeviceInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDeviceid(value);
      break;
    case 2:
      var value = new proto.gsdk.wiegand.WiegandTamperInput;
      reader.readMessage(value,proto.gsdk.wiegand.WiegandTamperInput.deserializeBinaryFromReader);
      msg.setTamperinput(value);
      break;
    case 3:
      var value = new proto.gsdk.wiegand.WiegandOutput;
      reader.readMessage(value,proto.gsdk.wiegand.WiegandOutput.deserializeBinaryFromReader);
      msg.setRedledoutput(value);
      break;
    case 4:
      var value = new proto.gsdk.wiegand.WiegandOutput;
      reader.readMessage(value,proto.gsdk.wiegand.WiegandOutput.deserializeBinaryFromReader);
      msg.setGreenledoutput(value);
      break;
    case 5:
      var value = new proto.gsdk.wiegand.WiegandOutput;
      reader.readMessage(value,proto.gsdk.wiegand.WiegandOutput.deserializeBinaryFromReader);
      msg.setBuzzeroutput(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gsdk.wiegand.WiegandDeviceInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gsdk.wiegand.WiegandDeviceInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gsdk.wiegand.WiegandDeviceInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.wiegand.WiegandDeviceInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeviceid();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getTamperinput();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gsdk.wiegand.WiegandTamperInput.serializeBinaryToWriter
    );
  }
  f = message.getRedledoutput();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.gsdk.wiegand.WiegandOutput.serializeBinaryToWriter
    );
  }
  f = message.getGreenledoutput();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.gsdk.wiegand.WiegandOutput.serializeBinaryToWriter
    );
  }
  f = message.getBuzzeroutput();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.gsdk.wiegand.WiegandOutput.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 deviceID = 1;
 * @return {number}
 */
proto.gsdk.wiegand.WiegandDeviceInfo.prototype.getDeviceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.gsdk.wiegand.WiegandDeviceInfo} returns this
 */
proto.gsdk.wiegand.WiegandDeviceInfo.prototype.setDeviceid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional WiegandTamperInput tamperInput = 2;
 * @return {?proto.gsdk.wiegand.WiegandTamperInput}
 */
proto.gsdk.wiegand.WiegandDeviceInfo.prototype.getTamperinput = function() {
  return /** @type{?proto.gsdk.wiegand.WiegandTamperInput} */ (
    jspb.Message.getWrapperField(this, proto.gsdk.wiegand.WiegandTamperInput, 2));
};


/**
 * @param {?proto.gsdk.wiegand.WiegandTamperInput|undefined} value
 * @return {!proto.gsdk.wiegand.WiegandDeviceInfo} returns this
*/
proto.gsdk.wiegand.WiegandDeviceInfo.prototype.setTamperinput = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gsdk.wiegand.WiegandDeviceInfo} returns this
 */
proto.gsdk.wiegand.WiegandDeviceInfo.prototype.clearTamperinput = function() {
  return this.setTamperinput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gsdk.wiegand.WiegandDeviceInfo.prototype.hasTamperinput = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional WiegandOutput redLEDOutput = 3;
 * @return {?proto.gsdk.wiegand.WiegandOutput}
 */
proto.gsdk.wiegand.WiegandDeviceInfo.prototype.getRedledoutput = function() {
  return /** @type{?proto.gsdk.wiegand.WiegandOutput} */ (
    jspb.Message.getWrapperField(this, proto.gsdk.wiegand.WiegandOutput, 3));
};


/**
 * @param {?proto.gsdk.wiegand.WiegandOutput|undefined} value
 * @return {!proto.gsdk.wiegand.WiegandDeviceInfo} returns this
*/
proto.gsdk.wiegand.WiegandDeviceInfo.prototype.setRedledoutput = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gsdk.wiegand.WiegandDeviceInfo} returns this
 */
proto.gsdk.wiegand.WiegandDeviceInfo.prototype.clearRedledoutput = function() {
  return this.setRedledoutput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gsdk.wiegand.WiegandDeviceInfo.prototype.hasRedledoutput = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional WiegandOutput greenLEDOutput = 4;
 * @return {?proto.gsdk.wiegand.WiegandOutput}
 */
proto.gsdk.wiegand.WiegandDeviceInfo.prototype.getGreenledoutput = function() {
  return /** @type{?proto.gsdk.wiegand.WiegandOutput} */ (
    jspb.Message.getWrapperField(this, proto.gsdk.wiegand.WiegandOutput, 4));
};


/**
 * @param {?proto.gsdk.wiegand.WiegandOutput|undefined} value
 * @return {!proto.gsdk.wiegand.WiegandDeviceInfo} returns this
*/
proto.gsdk.wiegand.WiegandDeviceInfo.prototype.setGreenledoutput = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gsdk.wiegand.WiegandDeviceInfo} returns this
 */
proto.gsdk.wiegand.WiegandDeviceInfo.prototype.clearGreenledoutput = function() {
  return this.setGreenledoutput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gsdk.wiegand.WiegandDeviceInfo.prototype.hasGreenledoutput = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional WiegandOutput buzzerOutput = 5;
 * @return {?proto.gsdk.wiegand.WiegandOutput}
 */
proto.gsdk.wiegand.WiegandDeviceInfo.prototype.getBuzzeroutput = function() {
  return /** @type{?proto.gsdk.wiegand.WiegandOutput} */ (
    jspb.Message.getWrapperField(this, proto.gsdk.wiegand.WiegandOutput, 5));
};


/**
 * @param {?proto.gsdk.wiegand.WiegandOutput|undefined} value
 * @return {!proto.gsdk.wiegand.WiegandDeviceInfo} returns this
*/
proto.gsdk.wiegand.WiegandDeviceInfo.prototype.setBuzzeroutput = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gsdk.wiegand.WiegandDeviceInfo} returns this
 */
proto.gsdk.wiegand.WiegandDeviceInfo.prototype.clearBuzzeroutput = function() {
  return this.setBuzzeroutput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gsdk.wiegand.WiegandDeviceInfo.prototype.hasBuzzeroutput = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gsdk.wiegand.SearchDeviceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gsdk.wiegand.SearchDeviceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gsdk.wiegand.SearchDeviceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.wiegand.SearchDeviceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    parentdeviceid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gsdk.wiegand.SearchDeviceRequest}
 */
proto.gsdk.wiegand.SearchDeviceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gsdk.wiegand.SearchDeviceRequest;
  return proto.gsdk.wiegand.SearchDeviceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gsdk.wiegand.SearchDeviceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gsdk.wiegand.SearchDeviceRequest}
 */
proto.gsdk.wiegand.SearchDeviceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setParentdeviceid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gsdk.wiegand.SearchDeviceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gsdk.wiegand.SearchDeviceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gsdk.wiegand.SearchDeviceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.wiegand.SearchDeviceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParentdeviceid();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 parentDeviceID = 1;
 * @return {number}
 */
proto.gsdk.wiegand.SearchDeviceRequest.prototype.getParentdeviceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.gsdk.wiegand.SearchDeviceRequest} returns this
 */
proto.gsdk.wiegand.SearchDeviceRequest.prototype.setParentdeviceid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gsdk.wiegand.SearchDeviceResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gsdk.wiegand.SearchDeviceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gsdk.wiegand.SearchDeviceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gsdk.wiegand.SearchDeviceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.wiegand.SearchDeviceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    wieganddeviceidsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gsdk.wiegand.SearchDeviceResponse}
 */
proto.gsdk.wiegand.SearchDeviceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gsdk.wiegand.SearchDeviceResponse;
  return proto.gsdk.wiegand.SearchDeviceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gsdk.wiegand.SearchDeviceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gsdk.wiegand.SearchDeviceResponse}
 */
proto.gsdk.wiegand.SearchDeviceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setWieganddeviceidsList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gsdk.wiegand.SearchDeviceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gsdk.wiegand.SearchDeviceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gsdk.wiegand.SearchDeviceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.wiegand.SearchDeviceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWieganddeviceidsList();
  if (f.length > 0) {
    writer.writePackedUint32(
      1,
      f
    );
  }
};


/**
 * repeated uint32 wiegandDeviceIDs = 1;
 * @return {!Array<number>}
 */
proto.gsdk.wiegand.SearchDeviceResponse.prototype.getWieganddeviceidsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.gsdk.wiegand.SearchDeviceResponse} returns this
 */
proto.gsdk.wiegand.SearchDeviceResponse.prototype.setWieganddeviceidsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.gsdk.wiegand.SearchDeviceResponse} returns this
 */
proto.gsdk.wiegand.SearchDeviceResponse.prototype.addWieganddeviceids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gsdk.wiegand.SearchDeviceResponse} returns this
 */
proto.gsdk.wiegand.SearchDeviceResponse.prototype.clearWieganddeviceidsList = function() {
  return this.setWieganddeviceidsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gsdk.wiegand.SetDeviceRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gsdk.wiegand.SetDeviceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gsdk.wiegand.SetDeviceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gsdk.wiegand.SetDeviceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.wiegand.SetDeviceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    parentdeviceid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    deviceinfosList: jspb.Message.toObjectList(msg.getDeviceinfosList(),
    proto.gsdk.wiegand.WiegandDeviceInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gsdk.wiegand.SetDeviceRequest}
 */
proto.gsdk.wiegand.SetDeviceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gsdk.wiegand.SetDeviceRequest;
  return proto.gsdk.wiegand.SetDeviceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gsdk.wiegand.SetDeviceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gsdk.wiegand.SetDeviceRequest}
 */
proto.gsdk.wiegand.SetDeviceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setParentdeviceid(value);
      break;
    case 2:
      var value = new proto.gsdk.wiegand.WiegandDeviceInfo;
      reader.readMessage(value,proto.gsdk.wiegand.WiegandDeviceInfo.deserializeBinaryFromReader);
      msg.addDeviceinfos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gsdk.wiegand.SetDeviceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gsdk.wiegand.SetDeviceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gsdk.wiegand.SetDeviceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.wiegand.SetDeviceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParentdeviceid();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getDeviceinfosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.gsdk.wiegand.WiegandDeviceInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 parentDeviceID = 1;
 * @return {number}
 */
proto.gsdk.wiegand.SetDeviceRequest.prototype.getParentdeviceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.gsdk.wiegand.SetDeviceRequest} returns this
 */
proto.gsdk.wiegand.SetDeviceRequest.prototype.setParentdeviceid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated WiegandDeviceInfo deviceInfos = 2;
 * @return {!Array<!proto.gsdk.wiegand.WiegandDeviceInfo>}
 */
proto.gsdk.wiegand.SetDeviceRequest.prototype.getDeviceinfosList = function() {
  return /** @type{!Array<!proto.gsdk.wiegand.WiegandDeviceInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gsdk.wiegand.WiegandDeviceInfo, 2));
};


/**
 * @param {!Array<!proto.gsdk.wiegand.WiegandDeviceInfo>} value
 * @return {!proto.gsdk.wiegand.SetDeviceRequest} returns this
*/
proto.gsdk.wiegand.SetDeviceRequest.prototype.setDeviceinfosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.gsdk.wiegand.WiegandDeviceInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gsdk.wiegand.WiegandDeviceInfo}
 */
proto.gsdk.wiegand.SetDeviceRequest.prototype.addDeviceinfos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.gsdk.wiegand.WiegandDeviceInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gsdk.wiegand.SetDeviceRequest} returns this
 */
proto.gsdk.wiegand.SetDeviceRequest.prototype.clearDeviceinfosList = function() {
  return this.setDeviceinfosList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gsdk.wiegand.SetDeviceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gsdk.wiegand.SetDeviceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gsdk.wiegand.SetDeviceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.wiegand.SetDeviceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gsdk.wiegand.SetDeviceResponse}
 */
proto.gsdk.wiegand.SetDeviceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gsdk.wiegand.SetDeviceResponse;
  return proto.gsdk.wiegand.SetDeviceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gsdk.wiegand.SetDeviceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gsdk.wiegand.SetDeviceResponse}
 */
proto.gsdk.wiegand.SetDeviceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gsdk.wiegand.SetDeviceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gsdk.wiegand.SetDeviceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gsdk.wiegand.SetDeviceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.wiegand.SetDeviceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gsdk.wiegand.GetDeviceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gsdk.wiegand.GetDeviceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gsdk.wiegand.GetDeviceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.wiegand.GetDeviceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    parentdeviceid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gsdk.wiegand.GetDeviceRequest}
 */
proto.gsdk.wiegand.GetDeviceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gsdk.wiegand.GetDeviceRequest;
  return proto.gsdk.wiegand.GetDeviceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gsdk.wiegand.GetDeviceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gsdk.wiegand.GetDeviceRequest}
 */
proto.gsdk.wiegand.GetDeviceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setParentdeviceid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gsdk.wiegand.GetDeviceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gsdk.wiegand.GetDeviceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gsdk.wiegand.GetDeviceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.wiegand.GetDeviceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParentdeviceid();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 parentDeviceID = 1;
 * @return {number}
 */
proto.gsdk.wiegand.GetDeviceRequest.prototype.getParentdeviceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.gsdk.wiegand.GetDeviceRequest} returns this
 */
proto.gsdk.wiegand.GetDeviceRequest.prototype.setParentdeviceid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gsdk.wiegand.GetDeviceResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gsdk.wiegand.GetDeviceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gsdk.wiegand.GetDeviceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gsdk.wiegand.GetDeviceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.wiegand.GetDeviceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    deviceinfosList: jspb.Message.toObjectList(msg.getDeviceinfosList(),
    proto.gsdk.wiegand.WiegandDeviceInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gsdk.wiegand.GetDeviceResponse}
 */
proto.gsdk.wiegand.GetDeviceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gsdk.wiegand.GetDeviceResponse;
  return proto.gsdk.wiegand.GetDeviceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gsdk.wiegand.GetDeviceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gsdk.wiegand.GetDeviceResponse}
 */
proto.gsdk.wiegand.GetDeviceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gsdk.wiegand.WiegandDeviceInfo;
      reader.readMessage(value,proto.gsdk.wiegand.WiegandDeviceInfo.deserializeBinaryFromReader);
      msg.addDeviceinfos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gsdk.wiegand.GetDeviceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gsdk.wiegand.GetDeviceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gsdk.wiegand.GetDeviceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.wiegand.GetDeviceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeviceinfosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.gsdk.wiegand.WiegandDeviceInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated WiegandDeviceInfo deviceInfos = 1;
 * @return {!Array<!proto.gsdk.wiegand.WiegandDeviceInfo>}
 */
proto.gsdk.wiegand.GetDeviceResponse.prototype.getDeviceinfosList = function() {
  return /** @type{!Array<!proto.gsdk.wiegand.WiegandDeviceInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gsdk.wiegand.WiegandDeviceInfo, 1));
};


/**
 * @param {!Array<!proto.gsdk.wiegand.WiegandDeviceInfo>} value
 * @return {!proto.gsdk.wiegand.GetDeviceResponse} returns this
*/
proto.gsdk.wiegand.GetDeviceResponse.prototype.setDeviceinfosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.gsdk.wiegand.WiegandDeviceInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gsdk.wiegand.WiegandDeviceInfo}
 */
proto.gsdk.wiegand.GetDeviceResponse.prototype.addDeviceinfos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.gsdk.wiegand.WiegandDeviceInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gsdk.wiegand.GetDeviceResponse} returns this
 */
proto.gsdk.wiegand.GetDeviceResponse.prototype.clearDeviceinfosList = function() {
  return this.setDeviceinfosList([]);
};


/**
 * @enum {number}
 */
proto.gsdk.wiegand.Enum = {
  FIRST_ENUM_VALUE_MUST_BE_ZERO: 0,
  DEFAULT_OUT_PULSE_WIDTH: 40,
  DEFAULT_OUT_PULSE_INTERVAL: 10000,
  MIN_OUT_PULSE_WIDTH: 20,
  MAX_OUT_PULSE_WIDTH: 100,
  MIN_OUT_PULSE_INTERVAL: 200,
  MAX_OUT_PULSE_INTERVAL: 20000,
  MAX_ID_FIELDS: 4,
  MAX_PARITY_FIELDS: 4,
  MAX_WIEGAND_FIELD_BITS: 256,
  MAX_WIEGAND_FIELD_BYTES: 32,
  MAX_WIEGAND_FORMATS: 16
};

/**
 * @enum {number}
 */
proto.gsdk.wiegand.WiegandMode = {
  WIEGAND_IN_ONLY: 0,
  WIEGAND_OUT_ONLY: 1,
  WIEGAND_IN_OUT: 2
};

/**
 * @enum {number}
 */
proto.gsdk.wiegand.WiegandParity = {
  WIEGAND_PARITY_NONE: 0,
  WIEGAND_PARITY_ODD: 1,
  WIEGAND_PARITY_EVEN: 2
};

/**
 * @enum {number}
 */
proto.gsdk.wiegand.WiegandOutType = {
  WIEGAND_OUT_UNSPECIFIED: 0,
  WIEGAND_OUT_CARD_ID: 1,
  WIEGAND_OUT_USER_ID: 2
};

goog.object.extend(exports, proto.gsdk.wiegand);
