// source: udp_master.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var network_pb = require('./network_pb.js');
goog.object.extend(proto, network_pb);
var udp_pb = require('./udp_pb.js');
goog.object.extend(proto, udp_pb);
goog.exportSymbol('proto.gsdk.udp_master.GetIPConfigRequest', null, global);
goog.exportSymbol('proto.gsdk.udp_master.GetIPConfigResponse', null, global);
goog.exportSymbol('proto.gsdk.udp_master.SetIPConfigRequest', null, global);
goog.exportSymbol('proto.gsdk.udp_master.SetIPConfigResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gsdk.udp_master.GetIPConfigRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gsdk.udp_master.GetIPConfigRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gsdk.udp_master.GetIPConfigRequest.displayName = 'proto.gsdk.udp_master.GetIPConfigRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gsdk.udp_master.GetIPConfigResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gsdk.udp_master.GetIPConfigResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gsdk.udp_master.GetIPConfigResponse.displayName = 'proto.gsdk.udp_master.GetIPConfigResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gsdk.udp_master.SetIPConfigRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gsdk.udp_master.SetIPConfigRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gsdk.udp_master.SetIPConfigRequest.displayName = 'proto.gsdk.udp_master.SetIPConfigRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gsdk.udp_master.SetIPConfigResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gsdk.udp_master.SetIPConfigResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gsdk.udp_master.SetIPConfigResponse.displayName = 'proto.gsdk.udp_master.SetIPConfigResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gsdk.udp_master.GetIPConfigRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gsdk.udp_master.GetIPConfigRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gsdk.udp_master.GetIPConfigRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.udp_master.GetIPConfigRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    gatewayid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    deviceinfo: (f = msg.getDeviceinfo()) && udp_pb.DeviceInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gsdk.udp_master.GetIPConfigRequest}
 */
proto.gsdk.udp_master.GetIPConfigRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gsdk.udp_master.GetIPConfigRequest;
  return proto.gsdk.udp_master.GetIPConfigRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gsdk.udp_master.GetIPConfigRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gsdk.udp_master.GetIPConfigRequest}
 */
proto.gsdk.udp_master.GetIPConfigRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGatewayid(value);
      break;
    case 2:
      var value = new udp_pb.DeviceInfo;
      reader.readMessage(value,udp_pb.DeviceInfo.deserializeBinaryFromReader);
      msg.setDeviceinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gsdk.udp_master.GetIPConfigRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gsdk.udp_master.GetIPConfigRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gsdk.udp_master.GetIPConfigRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.udp_master.GetIPConfigRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGatewayid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDeviceinfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      udp_pb.DeviceInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string gatewayID = 1;
 * @return {string}
 */
proto.gsdk.udp_master.GetIPConfigRequest.prototype.getGatewayid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gsdk.udp_master.GetIPConfigRequest} returns this
 */
proto.gsdk.udp_master.GetIPConfigRequest.prototype.setGatewayid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional gsdk.udp.DeviceInfo deviceInfo = 2;
 * @return {?proto.gsdk.udp.DeviceInfo}
 */
proto.gsdk.udp_master.GetIPConfigRequest.prototype.getDeviceinfo = function() {
  return /** @type{?proto.gsdk.udp.DeviceInfo} */ (
    jspb.Message.getWrapperField(this, udp_pb.DeviceInfo, 2));
};


/**
 * @param {?proto.gsdk.udp.DeviceInfo|undefined} value
 * @return {!proto.gsdk.udp_master.GetIPConfigRequest} returns this
*/
proto.gsdk.udp_master.GetIPConfigRequest.prototype.setDeviceinfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gsdk.udp_master.GetIPConfigRequest} returns this
 */
proto.gsdk.udp_master.GetIPConfigRequest.prototype.clearDeviceinfo = function() {
  return this.setDeviceinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gsdk.udp_master.GetIPConfigRequest.prototype.hasDeviceinfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gsdk.udp_master.GetIPConfigResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gsdk.udp_master.GetIPConfigResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gsdk.udp_master.GetIPConfigResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.udp_master.GetIPConfigResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    config: (f = msg.getConfig()) && network_pb.IPConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gsdk.udp_master.GetIPConfigResponse}
 */
proto.gsdk.udp_master.GetIPConfigResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gsdk.udp_master.GetIPConfigResponse;
  return proto.gsdk.udp_master.GetIPConfigResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gsdk.udp_master.GetIPConfigResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gsdk.udp_master.GetIPConfigResponse}
 */
proto.gsdk.udp_master.GetIPConfigResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new network_pb.IPConfig;
      reader.readMessage(value,network_pb.IPConfig.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gsdk.udp_master.GetIPConfigResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gsdk.udp_master.GetIPConfigResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gsdk.udp_master.GetIPConfigResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.udp_master.GetIPConfigResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      network_pb.IPConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional gsdk.network.IPConfig config = 1;
 * @return {?proto.gsdk.network.IPConfig}
 */
proto.gsdk.udp_master.GetIPConfigResponse.prototype.getConfig = function() {
  return /** @type{?proto.gsdk.network.IPConfig} */ (
    jspb.Message.getWrapperField(this, network_pb.IPConfig, 1));
};


/**
 * @param {?proto.gsdk.network.IPConfig|undefined} value
 * @return {!proto.gsdk.udp_master.GetIPConfigResponse} returns this
*/
proto.gsdk.udp_master.GetIPConfigResponse.prototype.setConfig = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gsdk.udp_master.GetIPConfigResponse} returns this
 */
proto.gsdk.udp_master.GetIPConfigResponse.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gsdk.udp_master.GetIPConfigResponse.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gsdk.udp_master.SetIPConfigRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gsdk.udp_master.SetIPConfigRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gsdk.udp_master.SetIPConfigRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.udp_master.SetIPConfigRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    gatewayid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    deviceinfo: (f = msg.getDeviceinfo()) && udp_pb.DeviceInfo.toObject(includeInstance, f),
    config: (f = msg.getConfig()) && network_pb.IPConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gsdk.udp_master.SetIPConfigRequest}
 */
proto.gsdk.udp_master.SetIPConfigRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gsdk.udp_master.SetIPConfigRequest;
  return proto.gsdk.udp_master.SetIPConfigRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gsdk.udp_master.SetIPConfigRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gsdk.udp_master.SetIPConfigRequest}
 */
proto.gsdk.udp_master.SetIPConfigRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGatewayid(value);
      break;
    case 2:
      var value = new udp_pb.DeviceInfo;
      reader.readMessage(value,udp_pb.DeviceInfo.deserializeBinaryFromReader);
      msg.setDeviceinfo(value);
      break;
    case 3:
      var value = new network_pb.IPConfig;
      reader.readMessage(value,network_pb.IPConfig.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gsdk.udp_master.SetIPConfigRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gsdk.udp_master.SetIPConfigRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gsdk.udp_master.SetIPConfigRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.udp_master.SetIPConfigRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGatewayid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDeviceinfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      udp_pb.DeviceInfo.serializeBinaryToWriter
    );
  }
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      network_pb.IPConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional string gatewayID = 1;
 * @return {string}
 */
proto.gsdk.udp_master.SetIPConfigRequest.prototype.getGatewayid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gsdk.udp_master.SetIPConfigRequest} returns this
 */
proto.gsdk.udp_master.SetIPConfigRequest.prototype.setGatewayid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional gsdk.udp.DeviceInfo deviceInfo = 2;
 * @return {?proto.gsdk.udp.DeviceInfo}
 */
proto.gsdk.udp_master.SetIPConfigRequest.prototype.getDeviceinfo = function() {
  return /** @type{?proto.gsdk.udp.DeviceInfo} */ (
    jspb.Message.getWrapperField(this, udp_pb.DeviceInfo, 2));
};


/**
 * @param {?proto.gsdk.udp.DeviceInfo|undefined} value
 * @return {!proto.gsdk.udp_master.SetIPConfigRequest} returns this
*/
proto.gsdk.udp_master.SetIPConfigRequest.prototype.setDeviceinfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gsdk.udp_master.SetIPConfigRequest} returns this
 */
proto.gsdk.udp_master.SetIPConfigRequest.prototype.clearDeviceinfo = function() {
  return this.setDeviceinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gsdk.udp_master.SetIPConfigRequest.prototype.hasDeviceinfo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional gsdk.network.IPConfig config = 3;
 * @return {?proto.gsdk.network.IPConfig}
 */
proto.gsdk.udp_master.SetIPConfigRequest.prototype.getConfig = function() {
  return /** @type{?proto.gsdk.network.IPConfig} */ (
    jspb.Message.getWrapperField(this, network_pb.IPConfig, 3));
};


/**
 * @param {?proto.gsdk.network.IPConfig|undefined} value
 * @return {!proto.gsdk.udp_master.SetIPConfigRequest} returns this
*/
proto.gsdk.udp_master.SetIPConfigRequest.prototype.setConfig = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gsdk.udp_master.SetIPConfigRequest} returns this
 */
proto.gsdk.udp_master.SetIPConfigRequest.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gsdk.udp_master.SetIPConfigRequest.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gsdk.udp_master.SetIPConfigResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gsdk.udp_master.SetIPConfigResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gsdk.udp_master.SetIPConfigResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.udp_master.SetIPConfigResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gsdk.udp_master.SetIPConfigResponse}
 */
proto.gsdk.udp_master.SetIPConfigResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gsdk.udp_master.SetIPConfigResponse;
  return proto.gsdk.udp_master.SetIPConfigResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gsdk.udp_master.SetIPConfigResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gsdk.udp_master.SetIPConfigResponse}
 */
proto.gsdk.udp_master.SetIPConfigResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gsdk.udp_master.SetIPConfigResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gsdk.udp_master.SetIPConfigResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gsdk.udp_master.SetIPConfigResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gsdk.udp_master.SetIPConfigResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.gsdk.udp_master);
